using System;
using System.Collections;
using UnityEngine;

public class UpgradeSplashScreen : SingletonMonoBehaviour
{
	public const float AnimateTime = 0.5f;

	public SoundEventData animateInSound;

	public SoundEventData animateOutSound;

	public SimpleSprite iconSprite;

	public SpriteText nameText;

	public SpriteText descriptionText;

	public static bool IsVisible
	{
		get
		{
			return SingletonMonoBehaviour.GetSingletonInstance<UpgradeSplashScreen>() != null;
		}
	}

	public static UpgradeSplashScreen GetOrCreateInstance()
	{
		return SingletonMonoBehaviour.GetAutoGeneratedSingletonInstance<UpgradeSplashScreen>();
	}

	private void OnEnable()
	{
		LevelManager.MovingToNextRoom += HandleLevelManagerMovingToNextRoom;
	}

	private void OnDisable()
	{
		LevelManager.MovingToNextRoom -= HandleLevelManagerMovingToNextRoom;
	}

	private void HandleLevelManagerMovingToNextRoom(object sender, EventArgs e)
	{
		StartCoroutine(DismissCoroutine());
	}

	public void Start()
	{
		UnityEngine.Object.DontDestroyOnLoad(base.gameObject);
		CharacterUpgradeData passiveUpgrade = StartGameSettings.Instance.activeSkylander.passiveUpgrade;
		iconSprite.GetComponent<MeshRenderer>().material.mainTexture = passiveUpgrade.Icon;
		nameText.Text = passiveUpgrade.LocalizedName.ToUpper();
		descriptionText.Text = passiveUpgrade.LocalizedDescription.ToUpper();
		SoundEventManager.Instance.Play2D(animateInSound);
		iTween.ScaleFrom(base.gameObject, Vector3.zero, 0.5f);
	}

	private IEnumerator DismissCoroutine()
	{
		SoundEventManager.Instance.Play2D(animateOutSound);
		iTween.ScaleTo(base.gameObject, Vector3.zero, 0.5f);
		yield return new WaitForSeconds(0.5f);
		UnityEngine.Object.Destroy(base.gameObject);
	}
}
