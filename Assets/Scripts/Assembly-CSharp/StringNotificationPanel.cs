using UnityEngine;

public class StringNotificationPanel : SingletonMonoBehaviour
{
	public enum Size
	{
		Small = 0,
		Medium = 1,
		Large = 2
	}

	public SpriteText text;

	public static StringNotificationPanel Instance
	{
		get
		{
			return SingletonMonoBehaviour.GetSingletonInstance<StringNotificationPanel>();
		}
	}

	public static StringNotificationPanel GetOrCreateSingletonInstance()
	{
		return SingletonMonoBehaviour.GetAutoGeneratedSingletonInstance<StringNotificationPanel>();
	}

	public void SetString(string message)
	{
		text.Text = message;
	}

	public void SetSize(Size size)
	{
		Vector3 localPosition = text.transform.localPosition;
		switch (size)
		{
		case Size.Small:
			text.SetCharacterSize(112f);
			text.transform.localPosition = new Vector3(localPosition.x, 15f, localPosition.z);
			break;
		case Size.Medium:
			text.SetCharacterSize(130f);
			text.transform.localPosition = new Vector3(localPosition.x, 15f, localPosition.z);
			break;
		case Size.Large:
			text.SetCharacterSize(221f);
			text.transform.localPosition = new Vector3(localPosition.x, 23f, localPosition.z);
			break;
		}
	}

	public void SetHidden(bool isHidden)
	{
		Renderer[] componentsInChildren = GetComponentsInChildren<Renderer>();
		Renderer[] array = componentsInChildren;
		foreach (Renderer renderer in array)
		{
			renderer.enabled = !isHidden;
		}
	}
}
